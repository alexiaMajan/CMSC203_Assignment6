/*
 * Class: CMSC203 
 * Instructor:Dr. Grinberg
 * Description: (Give a brief description for each Class)
 * Due: 12/3/2023
 * Platform/compiler:
 * I pledge that I have completed the programming  
 * assignment independently. I have not copied the code 
 * from a student or any source. I have not given my code 
 * to any student.
   Print your Name here: Alexia Majano
*/



import java.util.ArrayList;
import java.util.Random;


public class Order implements OrderInterface, Comparable<Order> {
	private int orderNumber;
	private int orderTime;
	private Day orderDay;
	private Customer customer;
	private ArrayList<Beverage> bev; 

	public Order(int orderTime, Day orderDay, Customer cust) {
		this.orderDay = orderDay;
		this.orderTime = orderTime;
		this.customer = cust;
		this.orderNumber = generateOrder(); 
		bev = new ArrayList<>();
	}

	public Order() {
	
	}

	public int generateOrder() {
		Random rand = new Random(); 
		int randomInt = rand.nextInt(90000 - 10000) + 10000; 
		return randomInt; 
	}
	public ArrayList<Beverage> getBeverages() {
		return bev;
	}


	public int getOrderNo() {
		return orderNumber;
	}

	public int getOrderTime() {
		return orderTime;
	}

	public Day getOrderDay() {
		return orderDay;
	}

	public Customer getCustomer() {
		return new Customer(customer);
	}
	public Day getDay() {
		return orderDay;
	}

	@Override
	public boolean isWeekend() {
		if (orderDay == Day.SATURDAY || orderDay == Day.SUNDAY) { 
			return true;
		}
		return false;
	}

	
	@Override
	public Beverage getBeverage(int itemNo) {
		 
		return bev.get(itemNo);
	}

	
	public int getTotalItems() {
		return bev.size(); 
	}

	@Override
	public void addNewBeverage(String bevName, Size size, boolean extraShot, boolean extraSyrup) {
		Coffee coffee = new Coffee(bevName, size, extraShot, extraSyrup); 
		bev.add(coffee); 

	}


	@Override
	public void addNewBeverage(String bevName, Size size) {
		boolean isWeekend = false;
		if (orderDay == Day.SATURDAY || orderDay == Day.SUNDAY) { 
			isWeekend = true; 
		}
		Alcohol alchohol = new Alcohol(bevName, size, isWeekend);
		bev.add(alchohol); 

	}

	

	@Override
	public void addNewBeverage(String bevName, Size size, int numOfFruits, boolean addProtein) {
		Smoothie smoothie = new Smoothie(bevName, size, numOfFruits, addProtein);
		bev.add(smoothie); // add to arrayList

	}

	
	@Override
	public double calcOrderTotal() {
		double orderTotal = 0;
		for (Beverage bev : bev) { 
			orderTotal += bev.calcPrice(); 
		}
		return orderTotal; 
	}
	
	
	@Override
	public int findNumOfBeveType(Type type) {
		int numberOfBev = 0;
		for (Beverage bev : bev) {
			if (bev.getType() == type) {
				numberOfBev++;
			}
		}
		return numberOfBev;
	}

	
	public String toString() {
		return orderDay.toString() + "," + orderTime + customer.toString() + "," + "The Order Number: " + orderNumber
				+ bev.toString() + calcOrderTotal(); 
															
	}
	@Override
	public int compareTo(Order o) {
		if (orderNumber > o.orderNumber) { 
			return 1; 
		} else if (orderNumber < o.orderNumber) { 
			return -1; 
		} else {
			return 0;
		}
	}

	
	

}
